import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.RadioButton;
import javafx.scene.control.ToggleGroup;
import javafx.scene.layout.GridPane;

public class TriviaController {
	
    @FXML
    private Button science;
    
    @FXML
    private Button geography;

    @FXML
    private Button history;
    
    @FXML
    private RadioButton option1;

    @FXML
    private RadioButton option2;

    @FXML
    private RadioButton option3;
    
    @FXML
    private RadioButton option4;

    @FXML
    private ToggleGroup options;
	
    @FXML
    private Label showQuestion;
    
    @FXML
    private Button submit;
    
    //private RadioButton[] answers;
    private ArrayList<String> data;

    //private Question questions[] = new Question[10];
    private ArrayList<Question> questions; 
    
    //The topic the user wants to get questions about
    private String chosenTopic;
    
    private QuestionsRepository repositoryQues;
    

	@FXML
	public void initialize() {
		questions = new ArrayList<>();
		int topicFlag = 0; // 0 = not read the question , 1 = read the question

		String st = new String();
		String question = "";
		int questionFlag = 0; // 0 = not ending with question , 1 = ending with question
		int i = 0;
		int j = 0;
		String correctAnswer = new String();
		Question quest;
		
		
		//Question q = new Question(question, correctAnswer, correctAnswer, correctAnswer, correctAnswer, correctAnswer);
		
		repositoryQues = new QuestionsRepository();
		
		String answersArray[] = new String[4];
		for(int k = 0; k <answersArray.length;k++ )
		{
			answersArray[k] = "";
		}
		
		
		
		try
		{
			Scanner input = new Scanner(new File("triva.txt"));
			while(input.hasNext())
			{
				st = input.next();
				
				/*if (st.equals("ending"))
				{
				 	topicFlag = 0;
				}*/
				
				switch(i)
				{
					case 0:
						question += st + " ";
						break;
					case 1:
						answersArray[0] += st + " ";
						break;
					case 2:
						answersArray[1] += st + " ";
						break;
					case 3:
						answersArray[2] += st + " ";
						break;
					case 4:
						answersArray[3] += st + " ";
						break;
					
				}
				if(st.charAt(st.length()-1) == '?')
				{
					i++;
				}
				if(st.charAt(st.length()-1) == '.')
					i++;
				if (i == 5)
				{
					questionFlag = 0;
					i = 0;
					correctAnswer = answersArray[0];
					suffleArray(answersArray);
					//questions[j] = new Question(question, answersArray[0], answersArray[1], answersArray[2],answersArray[3], correctAnswer);
					quest = new Question(question, answersArray[0], answersArray[1], answersArray[2],answersArray[3], correctAnswer);
					questions.add(quest);
					j++;
					question = "";
					for(int k = 0; k <answersArray.length;k++ )
					{
						answersArray[k] = "";
					}
				}
				
				/*if (st.equals(chosenTopic))
				{
				 	topicFlag = 1;
				}*/
		
				/*if(topicFlag == 1)
				{

				}*/
			}
			input.close();
		}
		catch(IOException e)
		{
			System.out.println("Error" );
		}
		showQuestion.setText(questions.get(0).getQuestion());
		option1.setText(questions.get(0).getAnswer1());
		option2.setText(questions.get(0).getAnswer2());
		option3.setText(questions.get(0).getAnswer3());
		option4.setText(questions.get(0).getAnswer4());
		
		for (int k = 0; k < questions.size(); k++) {
			System.out.println(questions.get(k).getQuestion());
			System.out.println(questions.get(k).getCorrectAnswer());
			System.out.println(questions.get(k).getAnswer1());
			System.out.println(questions.get(k).getAnswer2());
			System.out.println(questions.get(k).getAnswer3());
			System.out.println(questions.get(k).getAnswer4());
		}
		

		
		
		/*showQuestion.setText(questions[0].getQuestion());
		
		for (int k = 0; k < 5; k++) {
			System.out.println(questions[k].getQuestion());
			System.out.println(questions[k].getCorrectAnswer());
			System.out.println(questions[k].getAnswer1());
			System.out.println(questions[k].getAnswer2());
			System.out.println(questions[k].getAnswer3());
			System.out.println(questions[k].getAnswer4());
		}
		option1.setText(questions[0].getAnswer1());
		option2.setText(questions[0].getAnswer2());
		option3.setText(questions[0].getAnswer3());
		option4.setText(questions[0].getAnswer4());*/
		
		
		

		//System.out.println(answersArray[0]);
		/*for (int k = 0; k < questions.length; k++) {
			System.out.println(questions[k].getAnswer1());
			
		}*/
		

		
		/*answersArray[0] = answer1;
		answersArray[1] = answer2;
		answersArray[2] = answer3;
		answersArray[3] = answer4;*/

	}
	
    @FXML
    void sciencePressed(ActionEvent event) {

    }
    

    @FXML
    void geographyPressed(ActionEvent event) {

    }

    @FXML
    void historyPressed(ActionEvent event) {

    }
	
    @FXML
    void answerPressed(ActionEvent event) {
    	//System.out.println(option1.getText());
    	//System.out.println(submit.getText());
    	/*if(option1.isSelected())
    	{
    		System.out.println("asdasd");
    	}*/
    	
    	
    	
    }

    @FXML
    void reset(ActionEvent event) {

    }
	
	
	private static void suffleArray(String arr[]) {
		
		Random rand = new Random();
		int randomIndexToSwap ;
		String temp;
		for (int j = 0; j < arr.length; j++) {
			randomIndexToSwap =rand.nextInt(arr.length );
			temp = arr[randomIndexToSwap];
			arr[randomIndexToSwap] = arr[j];
			arr[j] = temp;
		}
		
	}

}
